#!/bin/bash

# Send the header so that i3bar knows we want to use JSON:
echo '{"version":1}'

# Begin the endless array.
echo '['

# We send an empty first array of blocks to make the loop simpler:
echo '[],'

# Now send blocks with information forever:
	white="#ffffff"
	green="#00ff00"
	red="#ff0000"
	
function loadips {
	LOCALIP=$(ifconfig wlp1s0 | grep "inet addr")
	LOCALIP=${LOCALIP%%B*0}
	LEN=${#LOCALIP}
	LOCALIP=${LOCALIP:20:$LEN-22}
	IP=$(wget -qO- http://ipecho.net/plain ; echo)
}

function print {
	echo '{"full_text":"'$1'","color":"'$2'"},'
}

function hexcolor {
	bat=$1
#       python -c 'print int(round('$red', 0)), int(round('$green', 0))'
        red=$(echo 255-$bat*2.55 | bc)
        green=$(echo $bat*2.55 | bc)
        green=$(echo "obase=16; ${green%.*}" | bc)
        red=$(echo "obase=16; ${red%.*}" | bc)
        if [ ${#red} = 1 ]; then
                red="0"$red
        fi
        if [ ${#green} = 1 ]; then
                green="0"$green
	fi
        hexcolor="#"$red$green"00"
#       echo $red $green
}

function batstat {
	green="#00ff00"
	red="#ff0000"
	BATSTAT=$(upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E "state")
	BATSTAT=${BATSTAT:25}
	if [ $BATSTAT = "discharging" ] && [ $bat -le 15 ]; then
		print "Discharging" $red
	elif [ $BATSTAT = "discharging" ]; then
		print "Discharging" $white
	elif [ $BATSTAT = "charging" ]; then
		print "Charging" $green
	fi
	
}

function batperc {
	BATPERC=$(upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E "percentage")
	BATPERC=${BATPERC:24}
	bat=${BATPERC::-1}
	hexcolor $bat
	print $BATPERC $hexcolor
}

function network {
	NETWORK="$(iwconfig wlp1s0 | grep ESSID:"*")"
	NETWORK=${NETWORK:30:-3}
	print "$NETWORK" $white
}

function vpn {
#queries TUN0 to see if a vpn is enabled. If it is, it will give a whole message, otherwise it will give a short error
#NOTE: should probably change so the error message won't go with the JSON stuff
	TUN0=$(ifconfig tun0)
	if [ ${#TUN0} -gt 100 ]; then
		echo {'"full_text":"VPN","color":"'$green'"'},
	fi
}

function ipaddrs {
#only prints out local and global? ip address. Not sure if global is right word, but whatever
	print $LOCALIP $white
	print $IP $white
}

function printdate {
#retrieves date and prints it out. Only called print date because calling it date made it recursive and crashed stuff
	DATE=$(date)
	DATE=${DATE::-9}
	DATE='"'$DATE'"'
	echo '{"full_text":'$DATE'}],'
}

function main {	
	echo "["
#	print $COUNTER $white
	batperc
	batstat
	network
	ipaddrs
	vpn
	printdate
	if [ $COUNTER -ge 500 ]; then
		loadips
		let COUNTER=0
	fi
	let COUNTER=COUNTER+1
	main
}
COUNTER=0
loadips
main
